module Servactory
  module ToolKit
    module DynamicOptions
      class Must
        @option_name: Symbol
        @body_key: Symbol
        @body_fallback: Symbol?

        def initialize: (Symbol option_name, Symbol body_key) -> void

        def must: (Symbol option_name) -> Maintenance::Attributes::OptionHelper

        def equivalent_with: (Symbol name) -> Proc

        def must_content_with: (untyped received_value) -> Hash[Symbol, untyped]

        def must_content_value_with: (option_message: untyped) -> Proc

        def must_content_message_with: (option_message: untyped) -> Proc

        def condition_for_input_with: (** untyped) -> (bool | [bool, Symbol])

        def condition_for_internal_with: (** untyped) -> (bool | [bool, Symbol])

        def condition_for_output_with: (** untyped) -> (bool | [bool, Symbol])

        def message_for_input_with: (** untyped) -> String

        def message_for_internal_with: (** untyped) -> String

        def message_for_output_with: (** untyped) -> String
      end
    end
  end
end
