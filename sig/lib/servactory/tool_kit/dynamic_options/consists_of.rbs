module Servactory
  module ToolKit
    module DynamicOptions
      class ConsistsOf < Must
        @collection_mode_class_names: Configuration::ClassNamesCollection

        def self.use: (?::Symbol option_name, collection_mode_class_names: Configuration::ClassNamesCollection) -> untyped

        def assign: (Configuration::ClassNamesCollection collection_mode_class_names) -> Configuration::ClassNamesCollection

        def common_condition_with: (attribute: (Inputs::Input | Internals::Internal | Outputs::Output), value: untyped, option: Must::WorkOption) -> (::Array[Symbol | bool] | bool)

        def validate_for!: (attribute: (Inputs::Input | Internals::Internal | Outputs::Output), values: Array[untyped], option: Must::WorkOption) -> (::Array[Symbol | bool] | bool)

        def given_type_for: (values: Array[untyped], option_value: untyped) -> (String | nil)
      end
    end
  end
end
