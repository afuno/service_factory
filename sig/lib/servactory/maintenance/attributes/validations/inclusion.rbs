module Servactory
  module Maintenance
    module Attributes
      module Validations
        class Inclusion < Base
          DEFAULT_MESSAGE: ^(service_class_name: String, input: Inputs::Input, value: untyped) -> String

          @context: instance
          @attribute: (Inputs::Input | Internals::Internal | Outputs::Output)
          @value: untyped

          def self.check: (context: instance, attribute: (Inputs::Input | Internals::Internal | Outputs::Output), value: untyped, check_key: Symbol, **untyped _) -> void

          def self.should_be_checked_for?: ((Inputs::Input | Internals::Internal | Outputs::Output) attribute, untyped value, Symbol check_key) -> bool

          def initialize: (context: instance, attribute: (Inputs::Input | Internals::Internal | Outputs::Output), value: untyped) -> void

          def check: () -> void

          private

          def add_error_with: (String? message) -> void
        end
      end
    end
  end
end
