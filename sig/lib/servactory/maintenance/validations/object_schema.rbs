module Servactory
  module Maintenance
    module Validations
      class ObjectSchema
        RESERVED_ATTRIBUTES: Array[Symbol]

        attr_reader errors: Array[Hash[Symbol, any]]

        @object: Hash[Symbol, any]
        @schema: Hash[Symbol, any]

        @valid: bool

        def self.validate: (*untyped) ?{ () -> untyped } -> self

        def initialize: (object: Hash[Symbol, any], schema: Hash[Symbol, any]) -> void

        def validate: () -> self

        def valid?: () -> bool

        private

        def validate_for: (object: Hash[Symbol, any], schema: Hash[Symbol, any], ?root_schema_key: Symbol?) -> bool

        def validate_with: (object: Hash[Symbol, any], schema_key: Symbol, schema_value: Hash[Symbol, any], attribute_type: Class, attribute_required: bool) -> bool

        def should_be_checked_for?: (object: Hash[Symbol, any], schema_key: Symbol, schema_value: Hash[Symbol, any], required: bool) -> bool

        def prepare_value_from: (schema_value: Hash[Symbol, any], value: any, required: bool) -> any

        def fetch_default_from: (Hash[Symbol, any] value) -> any

        def add_error: (name: Symbol, expected_type: Class, given_type: Class) -> Array[Hash[Symbol, any]]
      end
    end
  end
end
