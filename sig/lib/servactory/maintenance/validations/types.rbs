module Servactory
  module Maintenance
    module Validations
      class Types
        DEFAULT_MESSAGE: ^(
          service_class_name: String,
          attribute_system_name: Symbol,
          attribute: (Inputs::Input | Internals::Internal | Outputs::Output),
          key_name: Symbol,
          expected_type: String,
          given_type: String,
          ** untyped
        ) -> String

        @context: instance
        @attribute: (Inputs::Input | Internals::Internal | Outputs::Output)
        @types: Array[Class]
        @value: untyped
        @error_callback: Proc
        @prepared_types: Array[Class]

        def self.validate!: (
          attribute: (Inputs::Input | Internals::Internal | Outputs::Output),
          types: Array[Class],
          value: untyped,
          error_callback: Proc
        ) ?{ () -> untyped } -> void

        def initialize: (
          contect: instance,
          attribute: (Inputs::Input | Internals::Internal | Outputs::Output),
          types: Array[Class],
          value: untyped,
          error_callback: Proc
        ) -> void

        def validate!: -> (bool | Inputs::Validations::Errors | Exception)

        private

        def attribute_system_name: -> Symbol

        def prepared_types: -> Array[Class]

        def prepared_types_from: (Array[Class] types) -> Array[Class]
      end
    end
  end
end
