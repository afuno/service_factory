module Servactory
  class Result
    @context: instance?
    @exception: Exception?

    class Outputs
      def initialize: (Hash[Symbol, untyped] outputs) -> void

      def assign_instance_variables_from: (Hash[Symbol, untyped] outputs) -> void

      def define_methods_from: (Hash[Symbol, untyped] outputs) -> self

      def define_methods_template_from: (Hash[Symbol, untyped] outputs) -> String
    end

    def self.success_for: (*untyped) -> self

    def self.failure_for: (*untyped) -> self

    def initialize: (?context: instance?, ?exception: Exception?) -> void

    def inspect: () -> String

    def on_success: () -> self

    def on_failure: (Symbol type) -> self

    def respond_to_missing?: -> void

    private

    def as_success: () -> self

    def as_failure: () -> self

    def draw_result: () -> String

    def rescue_no_method_error_with: (exception: Exception) -> Exception
  end
end
