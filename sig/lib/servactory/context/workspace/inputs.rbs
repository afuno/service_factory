module Servactory
  module Context
    module Workspace
      class Inputs
        @context: instance
        @incoming_arguments: untyped
        @collection_of_inputs: Servactory::Inputs::Collection

        def initialize: (context: instance, incoming_arguments: untyped, collection_of_inputs: Servactory::Inputs::Collection) -> void

        def only: (Array[Symbol] input_names) -> Hash[Symbol, untyped]

        def method_missing: (Symbol name, *untyped args) { () -> untyped } -> void

        def respond_to_missing?: (Symbol name, *untyped) -> void

        private

        def getter_with: (name: Symbol) { () -> untyped } -> void
      end
    end
  end
end
