module Servactory
  module Context
    module Workspace
      class Inputs
        RESERVED_ATTRIBUTES: Array[Symbol]

        @context: instance
        @collection_of_inputs: Inputs::Collection

        def initialize: (context: instance, collection_of_inputs: Inputs::Collection) -> void

        def only: (Symbol input_names) -> Hash[Symbol, untyped]

        def except: (Symbol input_names) -> Hash[Symbol, untyped]

        def method_missing: (Symbol name, *untyped args) { () -> untyped } -> void

        def respond_to_missing?: (Symbol name, *untyped) -> void

        private

        def getter_with: (name: Symbol) { () -> untyped } -> void

        def prepare_object_values_inside: (object: Hash[Symbol, untyped], schema: Hash[Symbol, untyped]) { () -> untyped } -> void

        def fetch_object_values_from: (value: untyped, schema_value: Hash[Symbol, untyped], attribute_required: bool) { () -> untyped } -> void

        def raise_error_for: (Symbol type, Symbol name) { () -> untyped } -> Exception
      end
    end
  end
end
