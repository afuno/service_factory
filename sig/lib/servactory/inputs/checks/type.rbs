module Servactory
  module Inputs
    module Validations
      class Type < Base
        DEFAULT_MESSAGE: ^(service_class_name: String, input: Input, object_name: Symbol, expected_type: String, given_type: String) -> String

        @context: instance
        @input: Input
        @types: Array[Class]
        @prepared_types: Array[Class]
        @prepared_value: String

        def self.check: (context: instance, input: Input, check_key: Symbol, check_options: untyped) -> void

        def self.should_be_checked_for?: (Input input, Symbol check_key) -> bool

        def initialize: (context: instance, input: Input, types: Array[Class]) -> void

        def check: () -> void

        def prepared_types: -> Array[Class]

        def prepared_types_from: (Array[Class] types) -> Array[Class]

        def prepared_value: () -> String

        private

        def add_default_object_error_with: (Hash[Symbol, any] error) -> void

        def add_default_error: -> void
      end
    end
  end
end
